name: 🚀 Deploy to Vercel

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  # 测试和检查
  test:
    name: 🧪 Test & Lint
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🔍 Run type check
        run: npm run type-check

      - name: 📝 Run linter
        run: npm run lint:check || true

      - name: 🎨 Check formatting
        run: npm run format:check || true

  # 预览部署 (Pull Request)
  deploy-preview:
    name: 🔮 Deploy Preview
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    needs: test
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: 📦 Install Vercel CLI
        run: npm install --global vercel@latest

      - name: 🔗 Pull Vercel Environment
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}

      - name: 🔨 Build Project
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}

      - name: 🚀 Deploy to Preview
        id: deploy
        run: |
          DEPLOYMENT_URL=$(vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }})
          echo "deployment_url=$DEPLOYMENT_URL" >> $GITHUB_OUTPUT
          echo "Preview URL: $DEPLOYMENT_URL"

      - name: 💬 Comment on PR
        uses: actions/github-script@v7
        with:
          script: |
            const deployment_url = '${{ steps.deploy.outputs.deployment_url }}';
            
            // 查找现有的部署评论
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number
            });
            
            const botComment = comments.find(comment => 
              comment.user.type === 'Bot' && 
              comment.body.includes('🚀 Preview deployment ready!')
            );
            
            const body = `🚀 **Preview deployment ready!**
            
            | 📊 Status | 🔗 Preview URL | ⏱️ Time |
            |-----------|----------------|---------|
            | ✅ Success | [View Deployment](${deployment_url}) | ${new Date().toLocaleString('zh-CN')} |
            
            ---
            💡 This preview will be updated automatically when you push new commits.`;
            
            // 更新或创建评论
            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body
              });
            }

  # 生产部署 (Main Branch)
  deploy-production:
    name: 🎯 Deploy Production
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: test
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: 📦 Install Vercel CLI
        run: npm install --global vercel@latest

      - name: 🔗 Pull Vercel Environment
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: 🔨 Build Project
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: 🚀 Deploy to Production
        id: deploy
        run: |
          DEPLOYMENT_URL=$(vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }})
          echo "deployment_url=$DEPLOYMENT_URL" >> $GITHUB_OUTPUT
          echo "Production URL: $DEPLOYMENT_URL"

      - name: 📝 Create GitHub Deployment
        uses: actions/github-script@v7
        with:
          script: |
            const deployment_url = '${{ steps.deploy.outputs.deployment_url }}';
            
            // 创建部署记录
            const deployment = await github.rest.repos.createDeployment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: context.sha,
              task: 'deploy',
              auto_merge: false,
              required_contexts: [],
              payload: {
                web_url: deployment_url
              },
              environment: 'production',
              description: '🎯 Production deployment to Vercel',
              production_environment: true
            });
            
            // 更新部署状态
            await github.rest.repos.createDeploymentStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              deployment_id: deployment.data.id,
              state: 'success',
              target_url: deployment_url,
              environment_url: deployment_url,
              description: '✅ Deployment successful'
            });
            
            console.log(`✅ Production deployed to: ${deployment_url}`);

      - name: 🔔 Send Notification
        if: always()
        run: |
          if [ "${{ job.status }}" == "success" ]; then
            echo "✅ Production deployment successful: ${{ steps.deploy.outputs.deployment_url }}"
          else
            echo "❌ Production deployment failed"
          fi